#version 330 core

layout (location = 0) in vec3 aPos;       // Vertex position
layout (location = 1) in vec3 aNormal;    // Vertex normal
layout (location = 2) in vec2 aTexCoords; // Vertex texture coordinates

out vec3 FragPos;   // Pass position to fragment shader
out vec3 Normal;    // Pass normal to fragment shader
out vec2 TexCoords; // Pass texture coordinates to fragment shader

uniform mat4 model;      // Model matrix
uniform mat4 view;       // View matrix
uniform mat4 projection; // Projection matrix

void main() {
    FragPos = vec3(model * vec4(aPos, 1.0)); // Transform position
    Normal = mat3(transpose(inverse(model))) * aNormal; // Transform normals
    TexCoords = aTexCoords; // Pass texture coordinates to fragment shader

    gl_Position = projection * view * vec4(FragPos, 1.0); // Final position
}
